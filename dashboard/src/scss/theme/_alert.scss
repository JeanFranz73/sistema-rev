//
// Base styles
//

.alert {
  // scss-docs-start alert-css-vars
  --#{$prefix}alert-bg: transparent;
  --#{$prefix}alert-padding-x: #{$alert-padding-x};
  --#{$prefix}alert-padding-y: #{$alert-padding-y};
  --#{$prefix}alert-margin-bottom: #{$alert-margin-bottom};
  --#{$prefix}alert-color: inherit;
  --#{$prefix}alert-border-color: transparent;
  --#{$prefix}alert-border: #{$alert-border-width} solid var(--#{$prefix}alert-border-color);
  --#{$prefix}alert-border-radius: #{$alert-border-radius};
  // scss-docs-end alert-css-vars

  position: relative;
  padding: var(--#{$prefix}alert-padding-y) var(--#{$prefix}alert-padding-x);
  margin-bottom: var(--#{$prefix}alert-margin-bottom);
  color: var(--#{$prefix}alert-color);
  background-color: var(--#{$prefix}alert-bg);
  border: var(--#{$prefix}alert-border);
  border-radius: var(--#{$prefix}alert-border-radius,
    0); // stylelint-disable-line property-disallowed-list
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}

// Dismissible alerts
// Expand the right padding and account for the close button's positioning.
.alert-dismissible {
  padding-right: $alert-dismissible-padding-r;

  // Adjust close link position
  .btn-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: $stretched-link-z-index + 1;
    padding: $alert-padding-y * 1.25 $alert-padding-x;
  }
}

// scss-docs-start alert-soft-modifiers
@each $state,
$value in $theme-colors-soft {
  $alert-background: $value;
  $alert-border: $value;
  $alert-color: map-get($theme-colors-dark, $state);

  .alert-soft-#{$state} {
    @include alert-variant($alert-background, $alert-border, $alert-color);
  }
}

// scss-docs-end alert-soft-modifiers

// scss-docs-start alert-outline-modifiers
@each $state,
$value in $theme-colors {
  $alert-background: transparent;
  $alert-border: $value;
  $alert-color: $value;

  .alert-outline-#{$state} {
    @include alert-variant($alert-background, $alert-border, $alert-color);
  }
}

// scss-docs-end alert-outline-modifiers

// scss-docs-start alert-snipe-modifiers
@each $state,
$value in $theme-colors {
  $alert-background: var(--#{$prefix}white);
  $alert-border: var(--#{$prefix}gray-300);
  $alert-color: $value;

  .alert-snipe-#{$state} {
    @include alert-variant($alert-background, $alert-border, $alert-color);
  }
}

// scss-docs-end alert-snipe-modifiers

// scss-docs-start alert-solid-modifiers
@each $state,
$value in $theme-colors {
  $alert-background: $value;
  $alert-border: $value;
  $alert-color: $gray-300;

  .alert-#{$state} {
    @include alert-variant($alert-background, $alert-border, $alert-color);
  }
}

// scss-docs-end alert-solid-modifiers

@each $color,
$value in map-remove($theme-colors-300, 'secondary') {
  .alert-snipe-#{$color} {
    &:not(.light) {
      --#{$prefix}alert-bg: rgba(var(--#{$prefix}#{$color}-rgb), 0.1);
      --#{$prefix}alert-border-color: rgba(var(--#{$prefix}#{$color}-rgb),
        0.2);

      &[href] {
        @include hover-focus {
          color: map-get($theme-colors-dark, $color);
        }
      }
    }
  }
}