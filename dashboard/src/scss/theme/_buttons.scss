@use 'sass:string';

/*-----------------------------------------------
|   Button Reveal
-----------------------------------------------*/
.btn-reveal-trigger {
  @include hover-focus {
    .btn-reveal {
      // box-shadow: $btn-reveal-hover-shadow;
      background: var(--#{$prefix}gray-soft);
      border: 1px solid var(--#{$prefix}gray-200);
      color: var(--#{$prefix}gray-900);

      &:hover,
      &:focus,
      &:active {
        background: var(--#{$prefix}gray-200);
        color: var(--#{$prefix}gray-1000) !important;
      }
    }
  }

  .dropdown-toggle {

    &:after,
    &:before {
      display: none;
    }
  }
}

.btn-reveal-trigger-sm {
  @include media-breakpoint-up(sm) {
    @include hover-focus {
      .btn-reveal {
        // box-shadow: $btn-reveal-hover-shadow;
        background: $gray-soft;
        border: 1px solid $gray-200;

        &:hover,
        &:focus,
        &:active {
          color: var(--#{$prefix}btn-reveal-color) !important;
        }
      }
    }

    .dropdown-toggle {

      &:after,
      &:before {
        display: none;
      }
    }
  }
}

//
// Base styles
//

.btn {
  // scss-docs-start btn-css-vars
  --#{$prefix}btn-padding-x: #{$btn-padding-x};
  --#{$prefix}btn-padding-y: #{$btn-padding-y};
  --#{$prefix}btn-font-family: #{$btn-font-family};
  @include rfs($btn-font-size, --#{$prefix}btn-font-size);
  --#{$prefix}btn-font-weight: #{$btn-font-weight};
  --#{$prefix}btn-line-height: #{$btn-line-height};
  --#{$prefix}btn-color: #{var(--#{$prefix}body-color)
}

;
--#{$prefix}btn-bg: transparent;
--#{$prefix}btn-border-width: #{$btn-border-width};
--#{$prefix}btn-border-color: transparent;
--#{$prefix}btn-border-radius: #{$btn-border-radius};
--#{$prefix}btn-box-shadow: #{$btn-box-shadow};
--#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};
--#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), 0.5);
// scss-docs-end btn-css-vars

display: inline-block;
padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
font-family: var(--#{$prefix}btn-font-family);
@include font-size(var(--#{$prefix}btn-font-size));
font-weight: var(--#{$prefix}btn-font-weight);
line-height: var(--#{$prefix}btn-line-height);
color: var(--#{$prefix}btn-color);
text-align: center;
text-decoration: if($link-decoration ==none, null, none);
white-space: $btn-white-space;
vertical-align: middle;
cursor: if($enable-button-pointers, pointer, null);
user-select: none;
border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
@include border-radius(var(--#{$prefix}btn-border-radius));
@include gradient-bg(var(--#{$prefix}btn-bg));
@include box-shadow(var(--#{$prefix}btn-box-shadow));
@include transition($btn-transition);

&:hover {
  color: var(--#{$prefix}btn-hover-color);
  text-decoration: if($link-hover-decoration ==underline, none, null);
  background-color: var(--#{$prefix}btn-hover-bg);
  border-color: var(--#{$prefix}btn-hover-border-color);
}

.btn-check:focus+&,
&:focus {
  color: var(--#{$prefix}btn-hover-color);
  @include gradient-bg(var(--#{$prefix}btn-hover-bg));
  border-color: var(--#{$prefix}btn-hover-border-color);
  outline: 0;

  // Avoid using mixin so we can pass custom focus shadow properly
  @if $enable-shadows {
    box-shadow: var(--#{$prefix}btn-box-shadow),
    var(--#{$prefix}btn-focus-box-shadow);
  }

  @else {
    box-shadow: var(--#{$prefix}btn-focus-box-shadow);
  }
}

.btn-check:checked+&,
.btn-check:active+&,
&:active,
&.active,
&.show {
  color: var(--#{$prefix}btn-active-color);
  background-color: var(--#{$prefix}btn-active-bg);
  // Remove CSS gradients if they're enabled
  background-image: if($enable-gradients, none, null);
  border-color: var(--#{$prefix}btn-active-border-color);
  @include box-shadow(var(--#{$prefix}btn-active-shadow));

  &:focus {

    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-active-shadow),
      var(--#{$prefix}btn-focus-box-shadow);
    }

    @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }
}

&:disabled,
&.disabled,
fieldset:disabled & {
  color: var(--#{$prefix}btn-disabled-color);
  pointer-events: none;
  background-color: var(--#{$prefix}btn-disabled-bg);
  background-image: if($enable-gradients, none, null);
  border-color: var(--#{$prefix}btn-disabled-border-color);
  opacity: var(--#{$prefix}btn-disabled-opacity);
  @include box-shadow(none);
}
}

// scss-docs-start btn-variant-loops
@each $color,
$value in $button-colors {
  $hover-background: map-get($theme-hover-colors, $color);

  .btn-#{$color} {
    @include button-variant($background: $value,
      $border: transparent,
      $hover-background: $hover-background );
  }
}

// outline buttons
@each $color,
$value in $button-colors {
  $hover-color: map-get($theme-hover-colors, $color);

  .btn-outline-#{$color} {
    @include button-outline-variant($color: $value,
      $active-border: $hover-color );
  }
}

// outline buttons
@each $color,
$value in $button-colors {
  $hover-color: map-get($theme-hover-colors, $color);

  .btn-outline-snipe-#{$color} {
    @include button-outline-snipe-variant($color: $value,
      $border-color: $gray-200,
      $active-border: $hover-color,
      $active-background: $gray-200 );
  }
}

//soft buttons
@each $color,
$value in $button-colors {
  $text-color: map-get($theme-colors-dark, $color);
  $background: map-get($theme-colors-soft, $color);
  $hover-background: map-get($theme-colors-light, $color);

  .btn-soft-#{$color} {
    @include button-variant($background: $background,
      $border: $background,
      $color: $text-color,
      $hover-background: $hover-background,
      $hover-color: $text-color );
  }
}

//snipe buttons
@each $color,
$value in $button-colors {
  $hover-color: map-get($theme-hover-colors, $color);

  .btn-snipe-#{$color} {
    @include button-variant($background: $gray-soft,
      $border: $gray-200,
      $hover-background: $gray-200,
      $color: $value,
      $hover-color: $hover-color,
      $active-background: $gray-200,
      $active-color: $value );
  }
}

// scss-docs-end btn-variant-loops

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  --#{$prefix}btn-font-weight: #{$font-weight-bold};
  --#{$prefix}btn-color: #{$btn-link-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-active-border-color: transparent;
  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
  --#{$prefix}btn-disabled-border-color: transparent;
  --#{$prefix}btn-box-shadow: none;

  text-decoration: $link-decoration;

  &:hover,
  &:focus {
    text-decoration: $link-hover-decoration;
  }

  // No need for an active state here
}

//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg,
    $btn-padding-x-lg,
    $btn-font-size-lg,
    $btn-border-radius-lg );
}

.btn-sm {
  @include button-size($btn-padding-y-sm,
    $btn-padding-x-sm,
    $btn-font-size-sm,
    $btn-border-radius-sm );
}

.btn-circle {
  height: 2rem;
  width: 2rem;
  border-radius: 50%;
  padding: 0;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}

.btn-icon {
  height: 2rem;
  width: 2rem;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;

  &.btn-icon-lg {
    height: 2.375rem;
    width: 2.375rem;
  }

  &.btn-icon-xl {
    height: 3rem;
    width: 3rem;
  }
}

.circle-btn {
  height: 2rem;
  width: 2rem;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: var(--#{$prefix}border-radius-pill);
}

.project-modal-btn {
  --#{$prefix}bg-opacity: 0.64;
  transition: 0.3s;

  &:hover {
    --#{$prefix}bg-opacity: 1;
  }
}